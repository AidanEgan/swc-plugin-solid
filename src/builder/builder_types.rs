use std::collections::HashSet;

use swc_core::ecma::ast::Expr;

#[derive(Debug, Clone)]
pub enum ImportKinds {
    DelegateEvents,
    Template,
    CreateComponent,
    Insert,
    BuiltIn(String),
}

// Maybe won't need?
#[derive(Debug, Clone, Default)]
pub struct JsxBuildResult {
    import_modules: HashSet<ImportKinds>,
    events: HashSet<String>,
    expr: Expr,
}

#[derive(Debug, Default)]
pub struct InsertArgs {
    parent: usize, // Element id string will be generated by interal usize id
    expr: Expr,
    location: Option<usize>,
}

pub struct NonDelegatedEvent {}

pub enum ElDeclKinds {
    Tmpl,               // Template id will be passed in builder
    FirstChild(usize),  // Parent el id
    NextSibling(usize), // Sibling id
}

pub enum Kind {
    None,
    Open(usize),
    Close(usize),
    Text(usize),
    Placeholder(usize, bool), // Was skipped in template
}
